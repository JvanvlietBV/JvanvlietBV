import{_ as o,r,o as l,c as i,a as e,b as n,F as p,d as s,e as t}from"./app.e309fa3f.js";const c={},d=e("h1",{id:"deployment",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#deployment","aria-hidden":"true"},"#"),s(" Deployment")],-1),h=s("The "),u={href:"https://www.jvanvliet.com",target:"_blank",rel:"noopener noreferrer"},b=s("jvanvliet.com"),m=s(" website is deployed on a Ubuntu 20.04 LTS / Apache2 VPS."),g=s("Host: "),_={href:"https://www.businessconnect.nl",target:"_blank",rel:"noopener noreferrer"},v=s("Businessconnect"),f=s("."),k=e("h2",{id:"requirements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#requirements","aria-hidden":"true"},"#"),s(" Requirements")],-1),x=s("Jvanvliet.com is build on "),w={href:"https://laravel.com/docs/9.x/releases",target:"_blank",rel:"noopener noreferrer"},y=s("Laravel"),q=s(" version 9 with "),V={href:"https://jetstream.laravel.com/2.x/introduction.html",target:"_blank",rel:"noopener noreferrer"},S=s("Jetstream/Inertia+Vue"),P=t(`<h2 id="deploying-updates" tabindex="-1"><a class="header-anchor" href="#deploying-updates" aria-hidden="true">#</a> Deploying updates</h2><p>To deploy changes in the vue build, first run:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> run production
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Changes to the laravel files require no compiling and should be includes in pull requests.</p><p>Once a pull request is approved, and/or the changes have been pushed to the repo we can start deploying by following the next steps:</p><ol><li><p>SSH into the VPS</p></li><li><p>Move into the production folder by doing:</p></li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /var/www/website
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="3"><li>Next, pull in the latest changes.</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> pull
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="4"><li>Last, run the following command to deploy the latest changes and clear the caches (crucial!)</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> ./deploy.sh
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="5"><li>If no errors, the changes that were pulled in are now live.</li></ol><h2 id="laravel-schedules" tabindex="-1"><a class="header-anchor" href="#laravel-schedules" aria-hidden="true">#</a> Laravel Schedules</h2><p>Current tasks in the Laravel schedule:</p>`,14),j={href:"https://laravel.com/docs/9.x/eloquent#pruning-models",target:"_blank",rel:"noopener noreferrer"},L=s("Prune"),T=s(" Post Model."),C=t(`<h2 id="cronjobs" tabindex="-1"><a class="header-anchor" href="#cronjobs" aria-hidden="true">#</a> Cronjobs</h2><p>Currently there are 2 cronjobs running:</p><ol><li>Laravel task scheduling job. This job ensures that Laravel&#39;s task schedular runs every minute.</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>* * * * *  <span class="token builtin class-name">cd</span> /var/www/website <span class="token operator">&amp;&amp;</span> php artisan schedule:run <span class="token operator">&gt;&gt;</span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>We send a compressed backup of our production database to a private github repo each night.</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">0</span> <span class="token number">1</span> * * * mysqldump -u laravel -pREDACTED<span class="token operator">!</span> orderplatform <span class="token operator">|</span> <span class="token function">gzip</span> -c <span class="token operator">&gt;</span> /home/dbosh/mysql_backups/orderplatform.sql.gz<span class="token punctuation">;</span> mysqldump -u laravel -pREDACTED<span class="token operator">!</span> VVFG01 <span class="token operator">|</span> <span class="token function">gzip</span> -c <span class="token operator">&gt;</span> /home/dbosh/mysql_backups/VVFG01.sql.gz<span class="token punctuation">;</span> <span class="token builtin class-name">cd</span> /home/dbosh/mysql_backups<span class="token punctuation">;</span><span class="token function">git</span> <span class="token function">add</span> -A<span class="token punctuation">;</span> <span class="token function">git</span> commit -a -m <span class="token string">&quot;latest backups&quot;</span><span class="token punctuation">;</span> <span class="token function">git</span> push<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="information-about-vps" tabindex="-1"><a class="header-anchor" href="#information-about-vps" aria-hidden="true">#</a> Information about VPS</h2><p>You are able to SSH into the VPS machine, below is the information you&#39;ll need.</p><p>FTP is disabled, if you need to upload files directly use SFTP.</p><h3 id="host-address" tabindex="-1"><a class="header-anchor" href="#host-address" aria-hidden="true">#</a> Host Address</h3><p>Address: vs31021-01.businessconnect.nl</p><p>Port: 22</p><h3 id="credentials" tabindex="-1"><a class="header-anchor" href="#credentials" aria-hidden="true">#</a> Credentials</h3><p>Username : Given during onboarding, or request with your manager.</p><p>Password : Given during onboarding, or request with your manager.</p>`,15);function E(A,D){const a=r("ExternalLinkIcon");return l(),i(p,null,[d,e("p",null,[h,e("a",u,[b,n(a)]),m]),e("p",null,[g,e("a",_,[v,n(a)]),f]),k,e("p",null,[x,e("a",w,[y,n(a)]),q,e("a",V,[S,n(a)])]),P,e("ol",null,[e("li",null,[e("a",j,[L,n(a)]),T])]),C],64)}var I=o(c,[["render",E],["__file","index.html.vue"]]);export{I as default};
