import{_ as e,r as p,o,c,a as s,b as t,F as l,d as n,e as r}from"./app.e309fa3f.js";const u={},i=s("h1",{id:"front-end",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#front-end","aria-hidden":"true"},"#"),n(" Front-End")],-1),k=n("Welcome to the VuePress starter template for "),d={href:"https://codesandbox.io",target:"_blank",rel:"noopener noreferrer"},m=n("CodeSandbox"),b=n(". To learn more about VuePress in general and how to customize this project, please see the "),f={href:"https://v1.vuepress.vuejs.org",target:"_blank",rel:"noopener noreferrer"},h=n("VuePress documentation"),y=n("."),g=r(`<h2 id="directory-structure" tabindex="-1"><a class="header-anchor" href="#directory-structure" aria-hidden="true">#</a> Directory Structure</h2><p>The <code>resources</code> folder is the root of all front-end related views. In this folder, you&#39;ll find the following folders:</p><ul><li><code>css</code> - app.css file for development.</li><li><code>js</code> - the front-end Vue application and .vue files</li><li><code>lang</code> - the language files used for localization.</li><li><code>markdown</code> - .md files</li><li><code>views</code> - blade files with templates for emails, pdf&#39;s and the app&#39;s document root.</li></ul><h2 id="default-layout" tabindex="-1"><a class="header-anchor" href="#default-layout" aria-hidden="true">#</a> Default layout</h2><p>In our application we use inertia&#39;s default layout property. This means, that in the <code>/js/Layouts</code> folder there are 2 seperate layout template files - one for the public facing website and one for the private CMS.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&#39;@/Layouts/AppLayout.vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> CmsLayout <span class="token keyword">from</span> <span class="token string">&#39;@/Layouts/CmsLayout.vue&#39;</span><span class="token punctuation">;</span>

<span class="token function-variable function">resolve</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;CMS&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> page <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">@/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token punctuation">;</span>
            page<span class="token punctuation">.</span>layout <span class="token operator">=</span> CmsLayout<span class="token punctuation">;</span>

            <span class="token keyword">return</span> page<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;Profile&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> page <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">@/CMS/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token punctuation">;</span>
            page<span class="token punctuation">.</span>layout <span class="token operator">=</span> CmsLayout<span class="token punctuation">;</span>

            <span class="token keyword">return</span> page<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> page <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">@/Pages/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token punctuation">;</span>
            page<span class="token punctuation">.</span>layout <span class="token operator">=</span> Layout<span class="token punctuation">;</span>

            <span class="token keyword">return</span> page<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>`,6);function _(w,v){const a=p("ExternalLinkIcon");return o(),c(l,null,[i,s("p",null,[k,s("a",d,[m,t(a)]),b,s("a",f,[h,t(a)]),y]),g],64)}var L=e(u,[["render",_],["__file","index.html.vue"]]);export{L as default};
